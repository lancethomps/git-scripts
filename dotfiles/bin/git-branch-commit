#!/usr/bin/env bash
################################################################### SETUP ########################################################################
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"

function _usage() {
  local _SCRIPT_NAME_GIT
  _SCRIPT_NAME_GIT="${_SCRIPT_NAME/git-/git }"

  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME_GIT}" | wc -c)" </dev/zero | tr '\0' " ")"

  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME_GIT} [--remote] <branch_name> [<git_for_each_ref_arg>...]
       ${SYNOP_INDENT} [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME_GIT} staging-2
EOF
}
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      export debug_mode=true
      shift
      ;;
    --verbose)
      export verbose=true
      shift
      ;;
    --remote)
      remote=true
      shift
      ;;
    --)
      shift
      PASSTHROUGH_ARGS+=("$@")
      shift "$#"
      break
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

function main() {
  local branch_as_ref git_args

  if [[ $1 == refs/* ]]; then
    branch_as_ref="$1"
  elif test "${remote-}" = "true"; then
    branch_as_ref="refs/remotes/*/$1"
  else
    branch_as_ref="refs/heads/$1"
  fi
  shift

  git_args=(for-each-ref --format='%(objectname)')
  if ! is_arg_present --count "$@"; then
    git_args+=(--count 1)
  fi
  git_args+=("$@" "$branch_as_ref")

  git "${git_args[@]}"
}

main "${PASSTHROUGH_ARGS[@]}"
