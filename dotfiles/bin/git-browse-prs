#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=bin/.git_command_defaults.sh disable=SC2016
if test -e "${_SCRIPT_DIR}/.git_command_defaults.sh"; then source "${_SCRIPT_DIR}/.git_command_defaults.sh"; else echo '"${_SCRIPT_DIR}/.git_command_defaults.sh" does not exist - resolved to: '"${_SCRIPT_DIR}/.git_command_defaults.sh" && exit 1; fi
##################################################################################################################################################

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"
_SCRIPT_NAME_GIT="${_SCRIPT_NAME/git-/git }"

function _usage() {
  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" < /dev/zero | tr '\0' " ")"

  cat << EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME_GIT} [--all | --declined | --merged | --open] [--mine | --author <author>]
       ${SYNOP_INDENT}     [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME_GIT} --all
       ${_SCRIPT_NAME_GIT} --mine
       ${_SCRIPT_NAME_GIT} --author jerryseinfeld
EOF
}
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      shift
      export debug_mode=true
      ;;
    --verbose)
      shift
      export verbose=true
      ;;
    --all | --declined | --merged | --open)
      state_filter="${1//--/}"
      shift
      ;;
    --author)
      shift
      author_filter="$1"
      shift
      ;;
    --mine)
      shift
      author_filter="$(git config user.name)"
      ;;
    --)
      shift
      break
      ;;
    -*)
      echo "Unknown option: $1"
      _usage
      exit 1
      ;;
    *)
      break
      ;;
  esac
done
##################################################################################################################################################

function github_url() {
  local suffix='/pulls'
  local q=("is:pr")

  if test "${state_filter-}" = "declined" || test "${state_filter-}" = "merged"; then
    q+=("is:closed")
  elif test "${state_filter-}" = "open" || test -z "${state_filter-}"; then
    q+=("is:open")
  fi

  if test -n "${author_filter-}"; then
    q+=("author:${author_filter}")
  fi

  suffix="${suffix}?q=$(join_by " " "${q[@]}")"
  echo "${browser_url_root}${suffix}"
}

function bitbucket_url() {
  local suffix='/pull-requests'
  local params=()

  if test -n "${state_filter-}"; then
    params+=("state=${state_filter^^}")
  fi

  if test -n "${author_filter-}"; then
    params+=("author=${author_filter}")
  fi

  if test "${#params[@]}" -ne 0; then
    suffix="${suffix}?$(join_by '&' "${params[@]}")"
  fi

  echo "${browser_url_root}${suffix}"
}

scm_domain="$(git ui-url-domain)"
browser_url_root="$(git ui-url-root)"

if test "${scm_domain}" = 'github.com'; then
  browser_url="$(github_url)"
else
  browser_url="$(bitbucket_url)"
fi

if check_debug; then
  echo "$browser_url"
else
  open "$browser_url"
fi
