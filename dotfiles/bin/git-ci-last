#!/usr/bin/env bash
################################################################### SETUP ########################################################################
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

git check-supported-ci-types jenkins

################################################################# FILTERARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    --running | -r)
      running=true
      shift
      ;;
    --wait-until-found)
      wait_until_found=true
      shift
      ;;
    --)
      shift
      PASSTHROUGH_ARGS+=("$@")
      shift "$#"
      break
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

if ! api_url="$(git ci-last-url-shortcut "${PASSTHROUGH_ARGS[@]}")/api/json"; then
  exit 1
fi

function output_response_check_valid() {
  if ! echo "$1" | jq --sort-keys --exit-status; then
    return 1
  fi
  return 0
}

function need_to_wait_for_running() {
  if test "${running-}" = "true"; then
    test "$(echo "$1" | jq -r '.result')" != "null"
  else
    return 1
  fi
}

function get_api_response() {
  if ! api_response="$(jenkins_curl "$api_url")" || test -z "${api_response-}" || ! output_response_check_valid "$api_response" >/dev/null 2>&1; then
    if test "${wait_until_found-}" = "true" || test "${running-}" = "true"; then
      echo "Last build URL not found, waiting to retry..." >&2
      sleep 1
      get_api_response
      return $?
    fi
  elif need_to_wait_for_running "${api_response}"; then
    echo "Last build not running, waiting to retry..." >&2
    sleep 1
    get_api_response
    return $?
  fi
  echo "$api_response"
}

api_response="$(get_api_response)"

if ! output_response_check_valid "$api_response"; then
  log_stderr "ERROR Problem with Jenkins response from ${api_url} - output below"
  log_stderr "$api_response"
  exit 1
fi

exit 0
