#!/usr/bin/env bash
################################################################### SETUP ########################################################################
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

################################################################# FILTERARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    --open)
      open=true
      shift
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

if ! last_json="$(git ci-last)"; then
  echo "could not get last build JSON: ${last_json}"
  exit 1
fi

last_url="$(echo "$last_json" | jq --raw-output '.url')"

if test "$(echo "$last_json" | jq -r '.building')" = "true"; then
  build_url="$last_url"
else
  next_build_num="$(echo "$last_json" | jq '.number + 1')"
  next_build_url_prefix="$(echo "$last_url" | pcregrep -o1 '(.*?)/\d+/$')"
  next_build_url="${next_build_url_prefix}/${next_build_num}/"
  build_url="${next_build_url}"
fi

echo "$build_url"

if test "${open-}" = "true"; then
  if test "${#PASSTHROUGH_ARGS[@]}" -ne 0; then
    build_url="${build_url}${PASSTHROUGH_ARGS[*]}"
  fi
  open "$build_url"
fi

exit 0
