#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

git check-supported-ci-types jenkins

api_url="$(git ci-last-url-shortcut "$@")/testReport/api/json"

if check_debug; then
  echo jenkins_curl "$api_url"
  exit 0
fi

if ! tests_json="$(jenkins_curl "$api_url")" || test -z "${tests_json-}"; then
  exit_fatal "Failed to pull tests: ${tests_json}"
fi

echo "$tests_json" | jq -S '.suites = null'
if test "$(echo "$tests_json" | jq '.failCount')" = "0"; then
  log_stderr "PASSED"
else
  echo "$tests_json" | jq -S '[.suites[].cases[] | select(.status == "FAILED")]'
  log_stderr "FAILING TESTS ABOVE"
fi
