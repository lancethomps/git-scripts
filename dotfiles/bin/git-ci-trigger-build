#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

build_params=()

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"

function _usage() {
  git-ci-job-url --help

  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" </dev/zero | tr '\0' " ")"

  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME} [--param | -p <param>] [<passthrough_arg>...]
       ${SYNOP_INDENT} [--deploy-playground | --deploy-prod] [--gradle-build-cache-disabled] [--gradle-build-profile] [--gradle-build-scan] [--gradle-cache-refresh] [--gradle-publish | --gradle-publish-snapshot]
       ${SYNOP_INDENT} [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME}
EOF
}
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      export debug_mode=true
      shift
      ;;
    --verbose)
      export verbose=true
      shift
      ;;
    --deploy-playground)
      build_params+=("DEPLOY_PLAYGROUND=true")
      shift
      ;;
    --deploy-prod)
      build_params+=("DEPLOY_PROD=true")
      shift
      ;;
    --gradle-build-cache-disabled)
      build_params+=("GRADLE_BUILD_CACHE_DISABLED=true")
      shift
      ;;
    --gradle-build-profile)
      build_params+=("GRADLE_BUILD_PROFILE=true")
      shift
      ;;
    --gradle-build-scan)
      build_params+=("GRADLE_BUILD_SCAN=true")
      shift
      ;;
    --gradle-cache-refresh)
      build_params+=("GRADLE_CACHE_DISABLED=true" "GRADLE_CACHE_FORCE_UPLOAD=true")
      shift
      ;;
    --gradle-publish)
      build_params+=("GRADLE_PUBLISH=true")
      shift
      ;;
    --gradle-publish-snapshot)
      build_params+=("GRADLE_PUBLISH_SNAPSHOT=true")
      shift
      ;;
    --param | -p)
      shift
      build_params+=("$1")
      shift
      ;;
    --)
      shift
      PASSTHROUGH_ARGS+=("$@")
      shift "$#"
      break
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

function has_build_params() {
  local job_url="$1"

  debug_mode=false jenkins_curl "${job_url}/api/json" --silent | pcregrep -q '"hudson.model.ParametersDefinitionProperty"'
}

function main() {
  local job_url api_url
  git check-supported-ci-types "${CI_JENKINS}"

  job_url="$(git ci-job-url "$@")"
  if has_build_params "$job_url"; then
    api_url="${job_url}/buildWithParameters?delay=0sec"
  else
    api_url="${job_url}/build?delay=0sec"
  fi

  if test "${#build_params[@]}" -ne 0; then
    api_url="${api_url}&$(join_by '&' "${build_params[@]}")"
  fi

  log_and_run_no_sep jenkins_curl "$api_url" -X POST -w '%{http_code}\n'
}

main "${PASSTHROUGH_ARGS[@]}"
