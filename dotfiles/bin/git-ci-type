#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.git_ci_types.sh
source "${_SCRIPT_DIR}/.git_ci_types.sh" || exit 1
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

function check_git_config() {
  git config --get ci.type
}

function check_jenkins() {
  test -e "Jenkinsfile"
}

function check_jenkins_extended() {
  test -n "$(find -Ls . -maxdepth 1 -type f -name 'Jenkinsfile*')"
}

function check_github() {
  test -d ".github/workflows"
}

function check_travis() {
  test -e ".travis.yml"
}

function main() {
  local ci_type="${CI_NONE}" git_config_type

  if git_config_type="$(check_git_config)"; then
    ci_type="$git_config_type"
  elif check_jenkins; then
    ci_type="${CI_JENKINS}"
  elif check_github; then
    ci_type="${CI_GITHUB}"
  elif check_travis; then
    ci_type="${CI_TRAVIS}"
  elif check_jenkins_extended; then
    ci_type="${CI_JENKINS}"
  fi

  echo "$ci_type"
}

main "$@"
