#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"
_SCRIPT_NAME_GIT="${_SCRIPT_NAME/git-/git }"

function _usage() {
  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" </dev/zero | tr '\0' " ")"

  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME_GIT} [--no-pager | --pager] <period>
       ${SYNOP_INDENT}     [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME_GIT} '%Y-%m' # year-month
EOF
}

if test -z "${1-}"; then
  _usage "$@"
  exit 1
fi
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      shift
      export debug_mode=true
      ;;
    --verbose)
      shift
      export verbose=true
      ;;
    --no-pager | --pager)
      if test "$1" = '--no-pager'; then export use_pager=false; else export use_pager=true; fi
      shift
      ;;
    --)
      shift
      break
      ;;
    -*)
      echo "Unknown option: $1"
      _usage
      exit 1
      ;;
    *)
      break
      ;;
  esac
done

if test -z "${1-}"; then
  _usage "$@"
  exit 1
fi
##################################################################################################################################################

period="$1"
shift

use_git_pager_if_set

output="$(git log --pretty='format:%cd' --date=format:"$period" | uniq -c)"

if should_use_pager; then
  echo "$output" | eval "$PAGER"
else
  echo "$output"
fi
