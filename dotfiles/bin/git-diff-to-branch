#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.git_command_defaults.sh
source "${_SCRIPT_DIR}/.git_command_defaults.sh" || exit 1
##################################################################################################################################################

DEFAULT_GIT_CURRENT_BRANCH="$(git current-branch-or-commit)"
GIT_CURRENT_BRANCH="${GIT_CURRENT_BRANCH:-$DEFAULT_GIT_CURRENT_BRANCH}"
GIT_BRANCH="$1"
shift
GIT_MERGE_BASE="$(git merge-base "${GIT_CURRENT_BRANCH}" "${GIT_BRANCH}")"

################################################################# SCRIPTARGS #####################################################################
START_ARGS=()
END_ARGS=()
while test $# -gt 0; do
  case "$1" in
    --debug)
      shift
      export debug_mode=true
      ;;
    --)
      END_ARGS+=("$@")
      shift
      break
      ;;
    *)
      START_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

if check_debug; then
  echo git diff "${START_ARGS[@]}" "${GIT_MERGE_BASE}" "${GIT_CURRENT_BRANCH}" "${END_ARGS[@]}"
else
  git diff "${START_ARGS[@]}" "${GIT_MERGE_BASE}" "${GIT_CURRENT_BRANCH}" "${END_ARGS[@]}"
fi
