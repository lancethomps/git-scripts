#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

################################################################# FILTERARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    --auto-confirm)
      auto_confirm=true
      shift
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

mapfile -t FOUND_FILES < <(git grep --name-only "${PASSTHROUGH_ARGS[@]}")

if test "${#FOUND_FILES[@]}" -eq 0; then
  exit 1
fi

echo 'Matching Files
'"$(log_sep)"'
'"$(join_by_newline "${FOUND_FILES[@]}")"'
'

if confirm_with_auto "Open files in IntelliJ?"; then
  idea "${FOUND_FILES[@]}"
else
  exit 1
fi
