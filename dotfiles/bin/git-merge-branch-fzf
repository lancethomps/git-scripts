#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

if test -n "${1-}" && git does-branch-exist "${1-}"; then
  GIT_BRANCH="$1"
  shift
else
  GIT_CURRENT_BRANCH="$(git current-branch)"
  GIT_BRANCH="$(git branches refs/remotes/origin/ --color=always | grep -Ev "origin/(HEAD|${GIT_CURRENT_BRANCH})$" | fzf --ansi --no-sort --layout "reverse" --header "Current branch: ${GIT_CURRENT_BRANCH}" | pcregrep -o1 '\t([^\t]+)$')"
fi

if check_debug; then
  echo "DEBUG: git merge --no-edit $* ${GIT_BRANCH}"
else
  git merge --no-edit "$@" "${GIT_BRANCH}"
fi
