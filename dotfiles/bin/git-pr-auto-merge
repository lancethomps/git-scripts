#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.common_copy.sh
source "${_SCRIPT_DIR}/.common_copy.sh" || exit 1
set -o errexit -o errtrace -o nounset
##################################################################################################################################################

function main() {
  local curr_branch gh_args=(pr merge "$@" --auto --delete-branch) gh_add_args=()

  if test -n "${1-}" && git is-valid-branch "${1-}"; then
    curr_branch="$1"
  else
    curr_branch="$(git current-branch)"
  fi

  check_verbose && log_and_run_surround gh pr list --head "$curr_branch"

  if ! is_arg_present --squash "${gh_args[@]}" && ! is_arg_present --merge "${gh_args[@]}"; then
    gh_add_args+=(--merge)
  fi

  if ! log_and_run gh "${gh_args[@]}" "${gh_add_args[@]}"; then
    log_and_run gh "${gh_args[@]}" --squash
  fi

  return 0
}

main "$@"
