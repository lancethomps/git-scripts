#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argparse
import os

from ltpylib import opts, procs
from ltpylib.strconverters import url_encode


class ScriptArgs(opts.BaseArgs):

  def __init__(self, args: argparse.Namespace):
    super().__init__(args)

    self.to_ref: str = args.to_ref if args.to_ref else os.getenv("PR_TO_REF")
    self.urlencode: bool = args.urlencode

    if not self.to_ref:
      self.to_ref = run_git_command("default-branch")


def main():
  args = _parse_args()
  current_branch = run_git_command("current-branch")
  output = current_branch

  if args.urlencode:
    output = url_encode(output)

  print(output)


def run_git_command(*git_args) -> str:
  git_command = ["git"]
  git_command.extend(git_args)
  return procs.run_and_parse_output(git_command, check=True)[1].strip()


def _parse_args() -> ScriptArgs:
  arg_parser = opts.create_default_arg_parser()

  arg_parser.add_argument("--to-ref")
  arg_parser.add_argument("--urlencode", action=argparse.BooleanOptionalAction)

  return ScriptArgs(opts.parse_args_and_init_others(arg_parser))


if __name__ == '__main__':
  try:
    main()
  except KeyboardInterrupt:
    exit(130)
