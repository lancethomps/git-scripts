#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.git_command_defaults.sh
source "${_SCRIPT_DIR}/.git_command_defaults.sh" || exit 1
##################################################################################################################################################

################################################################### USAGE ########################################################################
_SCRIPT_NAME="$(basename "$0")"

function _usage() {
  local SYNOP_INDENT
  SYNOP_INDENT="$(head -c "$(echo -n "${_SCRIPT_NAME}" | wc -c)" </dev/zero | tr '\0' " ")"
  
  cat <<EOF
NAME
       ${_SCRIPT_NAME}

SYNOPSIS
       ${_SCRIPT_NAME} [--mine] [--tags] [<passthrough_arg>...]
       ${SYNOP_INDENT} [--help] [--debug] [--verbose]

EXAMPLES
       ${_SCRIPT_NAME}
EOF
}
##################################################################################################################################################

################################################################# SCRIPTARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      export debug_mode=true
      shift
      ;;
    --verbose)
      export verbose=true
      shift
      ;;
    --mine)
      mine=true
      shift
      ;;
    --tags)
      tags=true
      shift
      ;;
    --)
      shift
      PASSTHROUGH_ARGS+=("$@")
      shift "$#"
      break
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

GIT_CURRENT_BRANCH="$(git current-branch)"

if check_true "${tags-}"; then
  export BRANCH_ARG='refs/tags/'
else
  export BRANCH_ARG='refs/remotes/origin/'
fi

function get_refs() {
  if test "${mine-}" = "true"; then
    git branches "$BRANCH_ARG" --color=always | grep -Ev "origin/(HEAD|${GIT_CURRENT_BRANCH})$" | sed -E 's/'$'\t''origin\//'$'\t''/g' | grep "$(git config user.name)"
  else
    git branches "$BRANCH_ARG" --color=always | grep -Ev "origin/(HEAD|${GIT_CURRENT_BRANCH})$" | sed -E 's/'$'\t''origin\//'$'\t''/g'
  fi
}

get_refs | fzf --ansi --no-sort --layout "reverse" --header "Current branch: ${GIT_CURRENT_BRANCH}" | pcregrep -o1 '\t([^\t]+)$'
