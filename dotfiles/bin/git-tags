#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.git_command_defaults.sh
source "${_SCRIPT_DIR}/.git_command_defaults.sh" || exit 1
##################################################################################################################################################

use_pager=true

################################################################# SCRIPTARGS #####################################################################
while test $# -gt 0; do
  case "$1" in
    -h | --help)
      _usage
      exit 0
      ;;
    --debug)
      shift
      export debug_mode=true
      ;;
    --verbose)
      shift
      export verbose=true
      ;;
    --no-pager | --pager)
      if test "$1" = '--no-pager'; then export use_pager=false; else export use_pager=true; fi
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      break
      ;;
  esac
done
##################################################################################################################################################

branch_args='refs/tags/'
if test -n "${1:-}"; then
  branch_args="${branch_args}${1}"
  shift
fi

for_each_ref_args=("${branch_args}" "$@" --sort='-committerdate' --format="${GIT_TAG_REF_FORMAT}")
log_debug_or_verbose git for-each-ref "${for_each_ref_args[@]}"
exit_if_debug

if should_use_pager; then
  git for-each-ref "${for_each_ref_args[@]}" --color=always | fzf --ansi --no-sort --layout "reverse"
else
  git for-each-ref "${for_each_ref_args[@]}"
fi
