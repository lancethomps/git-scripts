#!/usr/bin/env bash
################################################################### SETUP ########################################################################
if ! _SCRIPT_DIR="$(get_script_dir "${BASH_SOURCE[0]}")"; then echo "Error while running: _SCRIPT_DIR=\"\$(get_script_dir \"${BASH_SOURCE[0]}\")\"" && exit 1; fi
# shellcheck source=./.command_defaults.sh
source "${_SCRIPT_DIR}/.command_defaults.sh" || exit 1
##################################################################################################################################################

################################################################# FILTERARGS #####################################################################
PASSTHROUGH_ARGS=()
while test $# -gt 0; do
  case "$1" in
    --all)
      all=true
      shift
      ;;
    --auto-confirm)
      auto_confirm=true
      shift
      ;;
    *)
      PASSTHROUGH_ARGS+=("$1")
      shift
      ;;
  esac
done
##################################################################################################################################################

git_clean_args=(
  -Xd
  --force
  "${PASSTHROUGH_ARGS[@]}"
)

if test "${all-}" != "true"; then
  git_clean_args+=(
    --exclude='!**/local_settings.py'
    --exclude='!*.iml'
    --exclude='!.env'
    --exclude='!.idea'
    --exclude='!venv'
    --exclude='!Procfile.me'
    --exclude='!spec/local_test_spec.rb'
    --exclude='!config/initializers/local_overrides.rb'
  )
fi

git clean --dry-run "${git_clean_args[@]}"
log_sep
log_verbose git clean "${git_clean_args[@]}"

if confirm_with_auto 'Trash (trash -Fv) above ignored files?'; then
  mapfile -t trash_files < <(git clean --dry-run "${git_clean_args[@]}" | sed -E 's/^Would remove //')
  trash -Fv "${trash_files[@]}"
fi
